/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // Google repository for Android dependencies
    google()
    // Gradle repository for Gradle tooling API
    gradlePluginPortal()
    // Official Gradle repository for Tooling API
    maven { url = uri("https://repo.gradle.org/gradle/libs-releases") }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
    
    // Gradle Tooling API for accessing Gradle project models
    api libs.gradle.tooling.api
    api libs.gradle.files
    api libs.gradle.snapshots
    api libs.gradle.workers
    api libs.gradle.core.api
    api libs.gradle.core
    api libs.gradle.model.core
    api libs.gradle.base.services
    api libs.gradle.platform.base
    api libs.gradle.file.collections
    
    // Android Gradle Plugin for Android project models
    api libs.android.gradle.plugin
    api libs.android.gradle.api
    api libs.android.builder.model
    
    // GSON for JSON serialization/debugging
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation libs.sugar.lombok
    annotationProcessor libs.sugar.lombok
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
